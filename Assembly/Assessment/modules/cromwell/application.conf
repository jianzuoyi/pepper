akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  actor.guardian-supervisor-strategy = "cromwell.core.CromwellUserGuardianStrategy"
}

backend {
  default = "SGE"
  providers {
    SGE {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        #root = "shell"    
        # Limits the number of concurrent jobs
        concurrent-job-limit = 10
    
        runtime-attributes = """
        Int cpu = 1
        Int? memory_gb
        String? sge_queue
        String? sge_project
        String? jobname = "script"
        """

        submit = """
        qsub \
        -terse \
        -V \
        -b n \
        -N ${jobname} \
        -wd ${cwd} \
        -o ${out} \
        -e ${err} \
        ${"-l vf=" + memory_gb + "G,p=" + cpu} \
        ${script}
        """

	kill = "qdel ${job_id}"
        check-alive = "qstat -j ${job_id}"
        job-id-regex = "(\\d+)"
      }
    }
  }
}

call-caching {
  # Allows re-use of existing results for jobs you've already run
  # (default: false)
  enabled = true

  # Whether to invalidate a cache result forever if we cannot reuse them. Disable this if you expect some cache copies
  # to fail for external reasons which should not invalidate the cache (e.g. auth differences between users):
  # (default: true)
  invalidate-bad-cache-results = true
}

database {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    driver = "com.mysql.jdbc.Driver"
    url = "jdbc:mysql://localhost:3307/cromwell?rewriteBatchedStatements=true"
    user = "root"
    password = ""
    connectionTimeout = 5000
  }
}

